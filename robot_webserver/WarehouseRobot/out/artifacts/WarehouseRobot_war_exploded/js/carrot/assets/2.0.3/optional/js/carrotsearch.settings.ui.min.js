/*! jQuery UI - v1.9.1 - 2012-11-12
* http://jqueryui.com
* Includes: jquery.ui.core.js, jquery.ui.widget.js, jquery.ui.mouse.js, jquery.ui.slider.js
* Copyright (c) 2012 jQuery Foundation and other contributors Licensed MIT */

(function(e,t){function i(t,n){var r,i,o,u=t.nodeName.toLowerCase();return"area"===u?(r=t.parentNode,i=r.name,!t.href||!i||r.nodeName.toLowerCase()!=="map"?!1:(o=e("img[usemap=#"+i+"]")[0],!!o&&s(o))):(/input|select|textarea|button|object/.test(u)?!t.disabled:"a"===u?t.href||n:n)&&s(t)}function s(t){return e.expr.filters.visible(t)&&!e(t).parents().andSelf().filter(function(){return e.css(this,"visibility")==="hidden"}).length}var n=0,r=/^ui-id-\d+$/;e.ui=e.ui||{};if(e.ui.version)return;e.extend(e.ui,{version:"1.9.1",keyCode:{BACKSPACE:8,COMMA:188,DELETE:46,DOWN:40,END:35,ENTER:13,ESCAPE:27,HOME:36,LEFT:37,NUMPAD_ADD:107,NUMPAD_DECIMAL:110,NUMPAD_DIVIDE:111,NUMPAD_ENTER:108,NUMPAD_MULTIPLY:106,NUMPAD_SUBTRACT:109,PAGE_DOWN:34,PAGE_UP:33,PERIOD:190,RIGHT:39,SPACE:32,TAB:9,UP:38}}),e.fn.extend({_focus:e.fn.focus,focus:function(t,n){return typeof t=="number"?this.each(function(){var r=this;setTimeout(function(){e(r).focus(),n&&n.call(r)},t)}):this._focus.apply(this,arguments)},scrollParent:function(){var t;return e.ui.ie&&/(static|relative)/.test(this.css("position"))||/absolute/.test(this.css("position"))?t=this.parents().filter(function(){return/(relative|absolute|fixed)/.test(e.css(this,"position"))&&/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0):t=this.parents().filter(function(){return/(auto|scroll)/.test(e.css(this,"overflow")+e.css(this,"overflow-y")+e.css(this,"overflow-x"))}).eq(0),/fixed/.test(this.css("position"))||!t.length?e(document):t},zIndex:function(n){if(n!==t)return this.css("zIndex",n);if(this.length){var r=e(this[0]),i,s;while(r.length&&r[0]!==document){i=r.css("position");if(i==="absolute"||i==="relative"||i==="fixed"){s=parseInt(r.css("zIndex"),10);if(!isNaN(s)&&s!==0)return s}r=r.parent()}}return 0},uniqueId:function(){return this.each(function(){this.id||(this.id="ui-id-"+ ++n)})},removeUniqueId:function(){return this.each(function(){r.test(this.id)&&e(this).removeAttr("id")})}}),e("<a>").outerWidth(1).jquery||e.each(["Width","Height"],function(n,r){function u(t,n,r,s){return e.each(i,function(){n-=parseFloat(e.css(t,"padding"+this))||0,r&&(n-=parseFloat(e.css(t,"border"+this+"Width"))||0),s&&(n-=parseFloat(e.css(t,"margin"+this))||0)}),n}var i=r==="Width"?["Left","Right"]:["Top","Bottom"],s=r.toLowerCase(),o={innerWidth:e.fn.innerWidth,innerHeight:e.fn.innerHeight,outerWidth:e.fn.outerWidth,outerHeight:e.fn.outerHeight};e.fn["inner"+r]=function(n){return n===t?o["inner"+r].call(this):this.each(function(){e(this).css(s,u(this,n)+"px")})},e.fn["outer"+r]=function(t,n){return typeof t!="number"?o["outer"+r].call(this,t):this.each(function(){e(this).css(s,u(this,t,!0,n)+"px")})}}),e.extend(e.expr[":"],{data:e.expr.createPseudo?e.expr.createPseudo(function(t){return function(n){return!!e.data(n,t)}}):function(t,n,r){return!!e.data(t,r[3])},focusable:function(t){return i(t,!isNaN(e.attr(t,"tabindex")))},tabbable:function(t){var n=e.attr(t,"tabindex"),r=isNaN(n);return(r||n>=0)&&i(t,!r)}}),e(function(){var t=document.body,n=t.appendChild(n=document.createElement("div"));n.offsetHeight,e.extend(n.style,{minHeight:"100px",height:"auto",padding:0,borderWidth:0}),e.support.minHeight=n.offsetHeight===100,e.support.selectstart="onselectstart"in n,t.removeChild(n).style.display="none"}),function(){var t=/msie ([\w.]+)/.exec(navigator.userAgent.toLowerCase())||[];e.ui.ie=t.length?!0:!1,e.ui.ie6=parseFloat(t[1],10)===6}(),e.fn.extend({disableSelection:function(){return this.bind((e.support.selectstart?"selectstart":"mousedown")+".ui-disableSelection",function(e){e.preventDefault()})},enableSelection:function(){return this.unbind(".ui-disableSelection")}}),e.extend(e.ui,{plugin:{add:function(t,n,r){var i,s=e.ui[t].prototype;for(i in r)s.plugins[i]=s.plugins[i]||[],s.plugins[i].push([n,r[i]])},call:function(e,t,n){var r,i=e.plugins[t];if(!i||!e.element[0].parentNode||e.element[0].parentNode.nodeType===11)return;for(r=0;r<i.length;r++)e.options[i[r][0]]&&i[r][1].apply(e.element,n)}},contains:e.contains,hasScroll:function(t,n){if(e(t).css("overflow")==="hidden")return!1;var r=n&&n==="left"?"scrollLeft":"scrollTop",i=!1;return t[r]>0?!0:(t[r]=1,i=t[r]>0,t[r]=0,i)},isOverAxis:function(e,t,n){return e>t&&e<t+n},isOver:function(t,n,r,i,s,o){return e.ui.isOverAxis(t,r,s)&&e.ui.isOverAxis(n,i,o)}})})(jQuery);(function(e,t){var n=0,r=Array.prototype.slice,i=e.cleanData;e.cleanData=function(t){for(var n=0,r;(r=t[n])!=null;n++)try{e(r).triggerHandler("remove")}catch(s){}i(t)},e.widget=function(t,n,r){var i,s,o,u,a=t.split(".")[0];t=t.split(".")[1],i=a+"-"+t,r||(r=n,n=e.Widget),e.expr[":"][i.toLowerCase()]=function(t){return!!e.data(t,i)},e[a]=e[a]||{},s=e[a][t],o=e[a][t]=function(e,t){if(!this._createWidget)return new o(e,t);arguments.length&&this._createWidget(e,t)},e.extend(o,s,{version:r.version,_proto:e.extend({},r),_childConstructors:[]}),u=new n,u.options=e.widget.extend({},u.options),e.each(r,function(t,i){e.isFunction(i)&&(r[t]=function(){var e=function(){return n.prototype[t].apply(this,arguments)},r=function(e){return n.prototype[t].apply(this,e)};return function(){var t=this._super,n=this._superApply,s;return this._super=e,this._superApply=r,s=i.apply(this,arguments),this._super=t,this._superApply=n,s}}())}),o.prototype=e.widget.extend(u,{widgetEventPrefix:u.widgetEventPrefix||t},r,{constructor:o,namespace:a,widgetName:t,widgetBaseClass:i,widgetFullName:i}),s?(e.each(s._childConstructors,function(t,n){var r=n.prototype;e.widget(r.namespace+"."+r.widgetName,o,n._proto)}),delete s._childConstructors):n._childConstructors.push(o),e.widget.bridge(t,o)},e.widget.extend=function(n){var i=r.call(arguments,1),s=0,o=i.length,u,a;for(;s<o;s++)for(u in i[s])a=i[s][u],i[s].hasOwnProperty(u)&&a!==t&&(e.isPlainObject(a)?n[u]=e.isPlainObject(n[u])?e.widget.extend({},n[u],a):e.widget.extend({},a):n[u]=a);return n},e.widget.bridge=function(n,i){var s=i.prototype.widgetFullName;e.fn[n]=function(o){var u=typeof o=="string",a=r.call(arguments,1),f=this;return o=!u&&a.length?e.widget.extend.apply(null,[o].concat(a)):o,u?this.each(function(){var r,i=e.data(this,s);if(!i)return e.error("cannot call methods on "+n+" prior to initialization; "+"attempted to call method '"+o+"'");if(!e.isFunction(i[o])||o.charAt(0)==="_")return e.error("no such method '"+o+"' for "+n+" widget instance");r=i[o].apply(i,a);if(r!==i&&r!==t)return f=r&&r.jquery?f.pushStack(r.get()):r,!1}):this.each(function(){var t=e.data(this,s);t?t.option(o||{})._init():new i(o,this)}),f}},e.Widget=function(){},e.Widget._childConstructors=[],e.Widget.prototype={widgetName:"widget",widgetEventPrefix:"",defaultElement:"<div>",options:{disabled:!1,create:null},_createWidget:function(t,r){r=e(r||this.defaultElement||this)[0],this.element=e(r),this.uuid=n++,this.eventNamespace="."+this.widgetName+this.uuid,this.options=e.widget.extend({},this.options,this._getCreateOptions(),t),this.bindings=e(),this.hoverable=e(),this.focusable=e(),r!==this&&(e.data(r,this.widgetName,this),e.data(r,this.widgetFullName,this),this._on(this.element,{remove:function(e){e.target===r&&this.destroy()}}),this.document=e(r.style?r.ownerDocument:r.document||r),this.window=e(this.document[0].defaultView||this.document[0].parentWindow)),this._create(),this._trigger("create",null,this._getCreateEventData()),this._init()},_getCreateOptions:e.noop,_getCreateEventData:e.noop,_create:e.noop,_init:e.noop,destroy:function(){this._destroy(),this.element.unbind(this.eventNamespace).removeData(this.widgetName).removeData(this.widgetFullName).removeData(e.camelCase(this.widgetFullName)),this.widget().unbind(this.eventNamespace).removeAttr("aria-disabled").removeClass(this.widgetFullName+"-disabled "+"ui-state-disabled"),this.bindings.unbind(this.eventNamespace),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")},_destroy:e.noop,widget:function(){return this.element},option:function(n,r){var i=n,s,o,u;if(arguments.length===0)return e.widget.extend({},this.options);if(typeof n=="string"){i={},s=n.split("."),n=s.shift();if(s.length){o=i[n]=e.widget.extend({},this.options[n]);for(u=0;u<s.length-1;u++)o[s[u]]=o[s[u]]||{},o=o[s[u]];n=s.pop();if(r===t)return o[n]===t?null:o[n];o[n]=r}else{if(r===t)return this.options[n]===t?null:this.options[n];i[n]=r}}return this._setOptions(i),this},_setOptions:function(e){var t;for(t in e)this._setOption(t,e[t]);return this},_setOption:function(e,t){return this.options[e]=t,e==="disabled"&&(this.widget().toggleClass(this.widgetFullName+"-disabled ui-state-disabled",!!t).attr("aria-disabled",t),this.hoverable.removeClass("ui-state-hover"),this.focusable.removeClass("ui-state-focus")),this},enable:function(){return this._setOption("disabled",!1)},disable:function(){return this._setOption("disabled",!0)},_on:function(t,n){var r,i=this;n?(t=r=e(t),this.bindings=this.bindings.add(t)):(n=t,t=this.element,r=this.widget()),e.each(n,function(n,s){function o(){if(i.options.disabled===!0||e(this).hasClass("ui-state-disabled"))return;return(typeof s=="string"?i[s]:s).apply(i,arguments)}typeof s!="string"&&(o.guid=s.guid=s.guid||o.guid||e.guid++);var u=n.match(/^(\w+)\s*(.*)$/),a=u[1]+i.eventNamespace,f=u[2];f?r.delegate(f,a,o):t.bind(a,o)})},_off:function(e,t){t=(t||"").split(" ").join(this.eventNamespace+" ")+this.eventNamespace,e.unbind(t).undelegate(t)},_delay:function(e,t){function n(){return(typeof e=="string"?r[e]:e).apply(r,arguments)}var r=this;return setTimeout(n,t||0)},_hoverable:function(t){this.hoverable=this.hoverable.add(t),this._on(t,{mouseenter:function(t){e(t.currentTarget).addClass("ui-state-hover")},mouseleave:function(t){e(t.currentTarget).removeClass("ui-state-hover")}})},_focusable:function(t){this.focusable=this.focusable.add(t),this._on(t,{focusin:function(t){e(t.currentTarget).addClass("ui-state-focus")},focusout:function(t){e(t.currentTarget).removeClass("ui-state-focus")}})},_trigger:function(t,n,r){var i,s,o=this.options[t];r=r||{},n=e.Event(n),n.type=(t===this.widgetEventPrefix?t:this.widgetEventPrefix+t).toLowerCase(),n.target=this.element[0],s=n.originalEvent;if(s)for(i in s)i in n||(n[i]=s[i]);return this.element.trigger(n,r),!(e.isFunction(o)&&o.apply(this.element[0],[n].concat(r))===!1||n.isDefaultPrevented())}},e.each({show:"fadeIn",hide:"fadeOut"},function(t,n){e.Widget.prototype["_"+t]=function(r,i,s){typeof i=="string"&&(i={effect:i});var o,u=i?i===!0||typeof i=="number"?n:i.effect||n:t;i=i||{},typeof i=="number"&&(i={duration:i}),o=!e.isEmptyObject(i),i.complete=s,i.delay&&r.delay(i.delay),o&&e.effects&&(e.effects.effect[u]||e.uiBackCompat!==!1&&e.effects[u])?r[t](i):u!==t&&r[u]?r[u](i.duration,i.easing,s):r.queue(function(n){e(this)[t](),s&&s.call(r[0]),n()})}}),e.uiBackCompat!==!1&&(e.Widget.prototype._getCreateOptions=function(){return e.metadata&&e.metadata.get(this.element[0])[this.widgetName]})})(jQuery);(function(e,t){var n=!1;e(document).mouseup(function(e){n=!1}),e.widget("ui.mouse",{version:"1.9.1",options:{cancel:"input,textarea,button,select,option",distance:1,delay:0},_mouseInit:function(){var t=this;this.element.bind("mousedown."+this.widgetName,function(e){return t._mouseDown(e)}).bind("click."+this.widgetName,function(n){if(!0===e.data(n.target,t.widgetName+".preventClickEvent"))return e.removeData(n.target,t.widgetName+".preventClickEvent"),n.stopImmediatePropagation(),!1}),this.started=!1},_mouseDestroy:function(){this.element.unbind("."+this.widgetName),this._mouseMoveDelegate&&e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate)},_mouseDown:function(t){if(n)return;this._mouseStarted&&this._mouseUp(t),this._mouseDownEvent=t;var r=this,i=t.which===1,s=typeof this.options.cancel=="string"&&t.target.nodeName?e(t.target).closest(this.options.cancel).length:!1;if(!i||s||!this._mouseCapture(t))return!0;this.mouseDelayMet=!this.options.delay,this.mouseDelayMet||(this._mouseDelayTimer=setTimeout(function(){r.mouseDelayMet=!0},this.options.delay));if(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)){this._mouseStarted=this._mouseStart(t)!==!1;if(!this._mouseStarted)return t.preventDefault(),!0}return!0===e.data(t.target,this.widgetName+".preventClickEvent")&&e.removeData(t.target,this.widgetName+".preventClickEvent"),this._mouseMoveDelegate=function(e){return r._mouseMove(e)},this._mouseUpDelegate=function(e){return r._mouseUp(e)},e(document).bind("mousemove."+this.widgetName,this._mouseMoveDelegate).bind("mouseup."+this.widgetName,this._mouseUpDelegate),t.preventDefault(),n=!0,!0},_mouseMove:function(t){return!e.ui.ie||document.documentMode>=9||!!t.button?this._mouseStarted?(this._mouseDrag(t),t.preventDefault()):(this._mouseDistanceMet(t)&&this._mouseDelayMet(t)&&(this._mouseStarted=this._mouseStart(this._mouseDownEvent,t)!==!1,this._mouseStarted?this._mouseDrag(t):this._mouseUp(t)),!this._mouseStarted):this._mouseUp(t)},_mouseUp:function(t){return e(document).unbind("mousemove."+this.widgetName,this._mouseMoveDelegate).unbind("mouseup."+this.widgetName,this._mouseUpDelegate),this._mouseStarted&&(this._mouseStarted=!1,t.target===this._mouseDownEvent.target&&e.data(t.target,this.widgetName+".preventClickEvent",!0),this._mouseStop(t)),!1},_mouseDistanceMet:function(e){return Math.max(Math.abs(this._mouseDownEvent.pageX-e.pageX),Math.abs(this._mouseDownEvent.pageY-e.pageY))>=this.options.distance},_mouseDelayMet:function(e){return this.mouseDelayMet},_mouseStart:function(e){},_mouseDrag:function(e){},_mouseStop:function(e){},_mouseCapture:function(e){return!0}})})(jQuery);(function(e,t){var n=5;e.widget("ui.slider",e.ui.mouse,{version:"1.9.1",widgetEventPrefix:"slide",options:{animate:!1,distance:0,max:100,min:0,orientation:"horizontal",range:!1,step:1,value:0,values:null},_create:function(){var t,r,i=this.options,s=this.element.find(".ui-slider-handle").addClass("ui-state-default ui-corner-all"),o="<a class='ui-slider-handle ui-state-default ui-corner-all' href='#'></a>",u=[];this._keySliding=!1,this._mouseSliding=!1,this._animateOff=!0,this._handleIndex=null,this._detectOrientation(),this._mouseInit(),this.element.addClass("ui-slider ui-slider-"+this.orientation+" ui-widget"+" ui-widget-content"+" ui-corner-all"+(i.disabled?" ui-slider-disabled ui-disabled":"")),this.range=e([]),i.range&&(i.range===!0&&(i.values||(i.values=[this._valueMin(),this._valueMin()]),i.values.length&&i.values.length!==2&&(i.values=[i.values[0],i.values[0]])),this.range=e("<div></div>").appendTo(this.element).addClass("ui-slider-range ui-widget-header"+(i.range==="min"||i.range==="max"?" ui-slider-range-"+i.range:""))),r=i.values&&i.values.length||1;for(t=s.length;t<r;t++)u.push(o);this.handles=s.add(e(u.join("")).appendTo(this.element)),this.handle=this.handles.eq(0),this.handles.add(this.range).filter("a").click(function(e){e.preventDefault()}).mouseenter(function(){i.disabled||e(this).addClass("ui-state-hover")}).mouseleave(function(){e(this).removeClass("ui-state-hover")}).focus(function(){i.disabled?e(this).blur():(e(".ui-slider .ui-state-focus").removeClass("ui-state-focus"),e(this).addClass("ui-state-focus"))}).blur(function(){e(this).removeClass("ui-state-focus")}),this.handles.each(function(t){e(this).data("ui-slider-handle-index",t)}),this._on(this.handles,{keydown:function(t){var r,i,s,o,u=e(t.target).data("ui-slider-handle-index");switch(t.keyCode){case e.ui.keyCode.HOME:case e.ui.keyCode.END:case e.ui.keyCode.PAGE_UP:case e.ui.keyCode.PAGE_DOWN:case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:t.preventDefault();if(!this._keySliding){this._keySliding=!0,e(t.target).addClass("ui-state-active"),r=this._start(t,u);if(r===!1)return}}o=this.options.step,this.options.values&&this.options.values.length?i=s=this.values(u):i=s=this.value();switch(t.keyCode){case e.ui.keyCode.HOME:s=this._valueMin();break;case e.ui.keyCode.END:s=this._valueMax();break;case e.ui.keyCode.PAGE_UP:s=this._trimAlignValue(i+(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.PAGE_DOWN:s=this._trimAlignValue(i-(this._valueMax()-this._valueMin())/n);break;case e.ui.keyCode.UP:case e.ui.keyCode.RIGHT:if(i===this._valueMax())return;s=this._trimAlignValue(i+o);break;case e.ui.keyCode.DOWN:case e.ui.keyCode.LEFT:if(i===this._valueMin())return;s=this._trimAlignValue(i-o)}this._slide(t,u,s)},keyup:function(t){var n=e(t.target).data("ui-slider-handle-index");this._keySliding&&(this._keySliding=!1,this._stop(t,n),this._change(t,n),e(t.target).removeClass("ui-state-active"))}}),this._refreshValue(),this._animateOff=!1},_destroy:function(){this.handles.remove(),this.range.remove(),this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all"),this._mouseDestroy()},_mouseCapture:function(t){var n,r,i,s,o,u,a,f,l=this,c=this.options;return c.disabled?!1:(this.elementSize={width:this.element.outerWidth(),height:this.element.outerHeight()},this.elementOffset=this.element.offset(),n={x:t.pageX,y:t.pageY},r=this._normValueFromMouse(n),i=this._valueMax()-this._valueMin()+1,this.handles.each(function(t){var n=Math.abs(r-l.values(t));i>n&&(i=n,s=e(this),o=t)}),c.range===!0&&this.values(1)===c.min&&(o+=1,s=e(this.handles[o])),u=this._start(t,o),u===!1?!1:(this._mouseSliding=!0,this._handleIndex=o,s.addClass("ui-state-active").focus(),a=s.offset(),f=!e(t.target).parents().andSelf().is(".ui-slider-handle"),this._clickOffset=f?{left:0,top:0}:{left:t.pageX-a.left-s.width()/2,top:t.pageY-a.top-s.height()/2-(parseInt(s.css("borderTopWidth"),10)||0)-(parseInt(s.css("borderBottomWidth"),10)||0)+(parseInt(s.css("marginTop"),10)||0)},this.handles.hasClass("ui-state-hover")||this._slide(t,o,r),this._animateOff=!0,!0))},_mouseStart:function(){return!0},_mouseDrag:function(e){var t={x:e.pageX,y:e.pageY},n=this._normValueFromMouse(t);return this._slide(e,this._handleIndex,n),!1},_mouseStop:function(e){return this.handles.removeClass("ui-state-active"),this._mouseSliding=!1,this._stop(e,this._handleIndex),this._change(e,this._handleIndex),this._handleIndex=null,this._clickOffset=null,this._animateOff=!1,!1},_detectOrientation:function(){this.orientation=this.options.orientation==="vertical"?"vertical":"horizontal"},_normValueFromMouse:function(e){var t,n,r,i,s;return this.orientation==="horizontal"?(t=this.elementSize.width,n=e.x-this.elementOffset.left-(this._clickOffset?this._clickOffset.left:0)):(t=this.elementSize.height,n=e.y-this.elementOffset.top-(this._clickOffset?this._clickOffset.top:0)),r=n/t,r>1&&(r=1),r<0&&(r=0),this.orientation==="vertical"&&(r=1-r),i=this._valueMax()-this._valueMin(),s=this._valueMin()+r*i,this._trimAlignValue(s)},_start:function(e,t){var n={handle:this.handles[t],value:this.value()};return this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("start",e,n)},_slide:function(e,t,n){var r,i,s;this.options.values&&this.options.values.length?(r=this.values(t?0:1),this.options.values.length===2&&this.options.range===!0&&(t===0&&n>r||t===1&&n<r)&&(n=r),n!==this.values(t)&&(i=this.values(),i[t]=n,s=this._trigger("slide",e,{handle:this.handles[t],value:n,values:i}),r=this.values(t?0:1),s!==!1&&this.values(t,n,!0))):n!==this.value()&&(s=this._trigger("slide",e,{handle:this.handles[t],value:n}),s!==!1&&this.value(n))},_stop:function(e,t){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("stop",e,n)},_change:function(e,t){if(!this._keySliding&&!this._mouseSliding){var n={handle:this.handles[t],value:this.value()};this.options.values&&this.options.values.length&&(n.value=this.values(t),n.values=this.values()),this._trigger("change",e,n)}},value:function(e){if(arguments.length){this.options.value=this._trimAlignValue(e),this._refreshValue(),this._change(null,0);return}return this._value()},values:function(t,n){var r,i,s;if(arguments.length>1){this.options.values[t]=this._trimAlignValue(n),this._refreshValue(),this._change(null,t);return}if(!arguments.length)return this._values();if(!e.isArray(arguments[0]))return this.options.values&&this.options.values.length?this._values(t):this.value();r=this.options.values,i=arguments[0];for(s=0;s<r.length;s+=1)r[s]=this._trimAlignValue(i[s]),this._change(null,s);this._refreshValue()},_setOption:function(t,n){var r,i=0;e.isArray(this.options.values)&&(i=this.options.values.length),e.Widget.prototype._setOption.apply(this,arguments);switch(t){case"disabled":n?(this.handles.filter(".ui-state-focus").blur(),this.handles.removeClass("ui-state-hover"),this.handles.prop("disabled",!0),this.element.addClass("ui-disabled")):(this.handles.prop("disabled",!1),this.element.removeClass("ui-disabled"));break;case"orientation":this._detectOrientation(),this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-"+this.orientation),this._refreshValue();break;case"value":this._animateOff=!0,this._refreshValue(),this._change(null,0),this._animateOff=!1;break;case"values":this._animateOff=!0,this._refreshValue();for(r=0;r<i;r+=1)this._change(null,r);this._animateOff=!1;break;case"min":case"max":this._animateOff=!0,this._refreshValue(),this._animateOff=!1}},_value:function(){var e=this.options.value;return e=this._trimAlignValue(e),e},_values:function(e){var t,n,r;if(arguments.length)return t=this.options.values[e],t=this._trimAlignValue(t),t;n=this.options.values.slice();for(r=0;r<n.length;r+=1)n[r]=this._trimAlignValue(n[r]);return n},_trimAlignValue:function(e){if(e<=this._valueMin())return this._valueMin();if(e>=this._valueMax())return this._valueMax();var t=this.options.step>0?this.options.step:1,n=(e-this._valueMin())%t,r=e-n;return Math.abs(n)*2>=t&&(r+=n>0?t:-t),parseFloat(r.toFixed(5))},_valueMin:function(){return this.options.min},_valueMax:function(){return this.options.max},_refreshValue:function(){var t,n,r,i,s,o=this.options.range,u=this.options,a=this,f=this._animateOff?!1:u.animate,l={};this.options.values&&this.options.values.length?this.handles.each(function(r){n=(a.values(r)-a._valueMin())/(a._valueMax()-a._valueMin())*100,l[a.orientation==="horizontal"?"left":"bottom"]=n+"%",e(this).stop(1,1)[f?"animate":"css"](l,u.animate),a.options.range===!0&&(a.orientation==="horizontal"?(r===0&&a.range.stop(1,1)[f?"animate":"css"]({left:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({width:n-t+"%"},{queue:!1,duration:u.animate})):(r===0&&a.range.stop(1,1)[f?"animate":"css"]({bottom:n+"%"},u.animate),r===1&&a.range[f?"animate":"css"]({height:n-t+"%"},{queue:!1,duration:u.animate}))),t=n}):(r=this.value(),i=this._valueMin(),s=this._valueMax(),n=s!==i?(r-i)/(s-i)*100:0,l[this.orientation==="horizontal"?"left":"bottom"]=n+"%",this.handle.stop(1,1)[f?"animate":"css"](l,u.animate),o==="min"&&this.orientation==="horizontal"&&this.range.stop(1,1)[f?"animate":"css"]({width:n+"%"},u.animate),o==="max"&&this.orientation==="horizontal"&&this.range[f?"animate":"css"]({width:100-n+"%"},{queue:!1,duration:u.animate}),o==="min"&&this.orientation==="vertical"&&this.range.stop(1,1)[f?"animate":"css"]({height:n+"%"},u.animate),o==="max"&&this.orientation==="vertical"&&this.range[f?"animate":"css"]({height:100-n+"%"},{queue:!1,duration:u.animate}))}})})(jQuery);(function(a){a.fn.datasets=function(e){function c(a,i){d.onChange.apply(l,[a,i])}function q(d){13==(d.charCode||d.keyCode||-1)&&a(this).parents("li[id]").find(":button").trigger("click")}var d=a.extend({},{legend:"Data set",datasets:{},advanced:!0,onChange:function(){}},e),l=this,e=a("<fieldset />");e.append(a("<legend />").text(d.legend));l.append(e);var h=a("<ul id='data-sets' />"),r;for(r in d.datasets){var p=d.datasets[r],s=a("<li class='simple' />");s.append(p.label);var y=a("<ul />"),w;for(w in p.urls){var t=
a("<a />").attr("href",w).text(p.urls[w]);t.click(function(){var i=/\.jsonp$/.test(this.href)?"json":"url";"json"==i?(d.onLoadingStart&&d.onLoadingStart.apply(l),a.ajax({url:this.href,dataType:"jsonp",jsonpCallback:"modelDataAvailable",success:function(a){c(a,i)}})):c(this.href,i);return!1});y.append(t.wrap("<li />").parent())}s.append(y);h.append(s)}e.append(h);r=a("      <li id='data-sets-advanced'>"+(d.controls.liveSearch?"<a href='#live-search-results'>Live search results &gt;</a>":"")+(d.controls.xmlFromUrl?
"<a href='#from-url'>Load XML from a URL &gt;</a>":"")+(d.controls.pasteXml?"<a href='#from-xml'>Paste XML &gt;</a>":"")+(d.controls.pasteJson?"<a href='#from-json'>Paste JSON &gt;</a>":"")+"</li>").appendTo(h);if(d.controls.liveSearch){var j=a("        <li id='live-search-results'>          <ul>            <li>              <label><span>Query</span> <input id='live-search-results-query' type='text' value='salsa' /></label>            </li>          <li>            <label>              <span>Fetch</span>              <select id='live-search-results-results'>                <option value='50'>50 hits</option>                <option value='100'>100 hits</option>                <option value='150' selected='selected'>150 hits</option>                <option value='200'>200 hits</option>              </select>            </label>            <label>              <span>Cluster</span>               <select id='live-search-results-algorithm'>                <option value='lingo3g'>by topic with Lingo3G</option>                <option value='url'>by URL</option>              </select>            </label>            <input type='button' value='Load' />          </li>        </ul>      </li>").hide().appendTo(h);
j.find(":button").click(function(){var a="http://search.carrotsearch.com/carrot2-webapp/xml?type=CARROT2&query="+encodeURIComponent(j.find("#live-search-results-query").val())+"&results="+encodeURIComponent(j.find("#live-search-results-results").val())+"&algorithm="+encodeURIComponent(j.find("#live-search-results-algorithm").val());c(a,"url")});j.find(":input").not(":button").keydown(q)}if(d.controls.xmlFromUrl){var i=a("        <li id='from-url'>          <ul>            <li>              <label style='float:left'>                <span>URL</span>                <input type='text' name='url' value='http://download.carrotsearch.com/clustering.xml' />              </label>              <input type='button' value='Load' />            </li>            <li><small>The URL must return data in the               <a href='http://download.carrot2.org/head/manual/#section.architecture.output-xml' target='_blank'>Carrot2 clusters XML format</a>.              <br />You will also need to               <a href='http://kb2.adobe.com/cps/142/tn_14213.html' target='_blank'>set up <tt>crossdomain.xml</tt></a> on the domain that serves your XML data.            </small></li>          </ul>        </li>").hide().appendTo(h);
i.find(":button").click(function(){c(i.find("input[name='url']").val(),"url")});i.find(":input").not(":button").keydown(q)}if(d.controls.pasteXml){var F=a("        <li id='from-xml'>          <ul>            <li>              <label>                <span>XML</span>                <textarea name='xml'>  <searchresult>\n    <query>test data</query>\n    <document id='0'><title>Title 0</title></document>\n    <document id='1'><title>Title 1</title></document>\n    <group id='0'>\n      <title><phrase>Group 0</phrase></title>\n      <document refid='0' />\n    </group>\n    <group id='1'>\n      <title><phrase>Group 1</phrase></title>\n      <document refid='0' />\n     <document refid='1' />\n    </group>\n  </searchresult>                </textarea>              </label>              <br />              <input type='button' value='Load' />              <small>XML must be in <a href='http://download.carrot2.org/head/manual/#section.architecture.output-xml' target='_blank'>Carrot2 clusters XML format</a>.</small>            </li>          </ul>        </li>").hide().appendTo(h);
F.find(":button").click(function(){c(F.find("textarea[name='xml']").val(),"xml")})}if(d.controls.pasteJson){var z=a('        <li id="from-json">          <ul>            <li>              <label>                <span>JSON</span>                <textarea name="json">{"groups": [\n    { "label": "Group 0", "weight": 3 },\n    { "label": "Group 1", "weight": 10 },\n    { "label": "Group 2", "weight": 5.5, "groups": [\n      { "label": "Group 2.1", "weight": 20 },\n      { "label": "Group 2.2", "weight": 0 }\n    ]}\n  ]}</textarea>              </label>              <br />              <input type="button" value="Load" />              <small>Use proper JSON notation, see <a href="api.html#option-dataObject"><tt>dataObject</tt> docs</a> for format</small>            </li>          </ul>        </li>').hide().appendTo(h);
z.find(":button").click(function(){c(window.JSON.parse(z.find("textarea[name='json']").val()),"json")})}var B=r.find("a"),G=a.map(B,function(d){return a("#"+d.href.substring(d.href.indexOf("#")+1),h).get(0)});B.click(function(){var d=a("#"+this.href.substring(this.href.indexOf("#")+1),h);a(G).not(d).slideUp();B.not(this).removeClass("active");d.slideToggle(function(){a(this).find(":input:eq(0)").focus().select()});a(this).toggleClass("active");return!1});return this}})(window.jQuery);(function(a){a.fn.debug=function(e){var e=a.extend({},{legend:"Debug"},e),c=a("<fieldset class='folded' />");c.append(a("<legend />").text(e.legend));c.append("<ul>        <li><a href='#hide'>Hide visualization container</a></li>        <li><a href='#show'>Show visualization container</a></li>      </ul>");c.find("a[href = '#hide']").click(function(){a(window.parent.document.getElementById("swfcontainer")).hide();return!1});c.find("a[href = '#show']").click(function(){a(window.parent.document.getElementById("swfcontainer")).show();
return!1});this.append(c);return this}})(window.jQuery);(function(a){a.fn.eventlog=function(e){function c(){function h(d,c){var e=a("<span />");"undefined"==typeof c&&(c=d,d=null);d&&e.addClass(d);e.text(c);j.append(e)}function e(d){switch(Object.prototype.toString.call(d)){case "[object Array]":h("array","[ ");for(var c=Math.min(d.length,5),j=0;j<c;j++)e(d[j]),j<d.length-1&&h(null,", ");d.length>c&&h("ellipsis","and "+(d.length-c)+" more");h("array"," ]");break;case "[object String]":c=80<d.length?d.substring(0,80)+"...":d;h("string",'"'+c+'"');break;
case "[object Boolean]":h("boolean",d.toString());break;case "[object Number]":h("number",d.toString());break;case "[object Null]":h("object","null");break;case "[object Undefined]":h("object","undefined");break;default:h(null,"{ ");var l=0;a.each(d,function(){l++});a.each(d,function(a){h(null,a+": ");e(d[a]);0<--l&&h(null,", ")});h(null," }")}}var c=arguments[0];if(d.piggybackEvents&&d.piggybackEvents[c])d.piggybackEvents[c]();if(!d.optional||!d.optional[c]||a("#"+c+"Cb").is(":checked")){var j=a("<div />");
j.addClass(c);h("method",c+"(");1<arguments.length&&e(arguments[1]);for(c=2;c<arguments.length;c++)h(null,", "),e(arguments[c]);h("method",")");r.append(j);c=r.children().size();c>d.maxLines&&r.children().slice(0,c-d.maxLines).remove();r.get(0).scrollTop=r.get(0).scrollHeight}}function q(a,c,h){return function(){for(var e=[a],i=0;i<arguments.length;i++)e.push(arguments[i]);c.apply(this,e);h&&0>h.toString().indexOf("eventLogCallbackWrapper")&&(e.shift(),h.apply(d.source,e))}}var d=a.extend({},{legend:"Event log",
source:null,events:[],maxLines:100},e);if(!d.source)return this;var l={};a(window).unload(function(){d.source.set(l)});var h=a("<fieldset />");h.append(a("<legend />").text(d.legend));var r=a("<div class='log'></div>");h.append(r);d.optional&&a.each(d.optional,function(a){h.append("<label style='margin-right: 1em; float: left'><input type='checkbox' id='"+a+"Cb' />&nbsp;Show&nbsp;"+a+"</label>")});this.append(h);var e=a.extend({},d.piggyback),p;for(p in d.events){var s=d.source.get(d.events[p]);l[d.events[p]]=
s;e[d.events[p]]=q(d.events[p],c,s)}d.source.set(e);return this}})(window.jQuery);(function(a){a.fn.foldable=function(){this.each(function(){var e=a(this),c=e.parent();!c.is(".folded")&&!c.is(".unfolded")&&c.addClass("unfolded");e.click(function(){a("body").is(".standalone")||(a(this),c.is(".folded")?c.removeClass("folded").addClass("unfolded"):c.removeClass("unfolded").addClass("folded"))});e.is("h1")&&e.parent().find("h2").click(function(){var c=a(this).parent();if(c.is(".folded")){c.removeClass("folded").addClass("unfolded");var d=this;setTimeout(function(){window.location.hash=
"#"+a(d).attr("id")},0)}})})}})(window.jQuery);(function(a){a.fn.framerate=function(e){function c(){var a=q.source.get("times");if(a.finalDrawTime){var c=d.find("#framerate"),e=c.find("#lastRedrawTime"),p=c.find("#lastRedrawFps"),s=c.find("#lastRolloutMaxFps"),c=c.find("#lastRolloutScreenFps");s.text((1E3*a.rolloutFramesDrawn/a.rolloutComputationTime).toFixed(2)+" FPS (max)");c.text((1E3*a.rolloutFramesDrawn/a.rolloutTotalTime).toFixed(2)+" FPS");e.text(a.finalDrawTime+" ms");p.text((1E3/a.finalDrawTime).toFixed(2)+" FPS (max)")}}var q=a.extend({},
{legend:"Frame rate"},e),d=this;if(q.update)c();else return e=a("<fieldset id='framerate' />"),e.append(a("<legend />").text(q.legend)),e.append("<ul>      <li><label><span>Last redraw</span></label><span id='lastRedrawTime'>n/a</span>, <span id='lastRedrawFps'>n/a</span></li>      <li><label><span>Last rollout</span></label><span id='lastRolloutScreenFps'>n/a</span>, <span id='lastRolloutMaxFps'>n/a</span></li>    </ul>"),d.append(e),c(),this}})(window.jQuery);(function(a){a.fn.settings=function(e){function c(a){return j.help[a]&&j.help[a].help}function q(){for(var d=a(this),c=d.data("optionId"),g=j.help[c[0]].help,e=1;e<c.length;e++)g+=" "+j.help[c[e]].help;e=a("<div class='help'><div><div></div></div></div>");e.find("div > div").html("<div>"+g+"</div><p>Option name"+(1<c.length?"s":"")+": <tt>"+c.join("</tt>, <tt>")+"</tt></p>");c=d.closest("label");0==c.length&&(c=d.closest("div.label"));c.after(e);return!1}function d(d,c,g,e){var h=a([]),n=a([]),i;
for(i in g.values){var j=g.values[i],b="string"==typeof j,f=a("<input />").attr("name",d).attr("type","radio").attr("value",i);e.find("div").append(f.wrap("<label class='radio' />").parent().append(b?j:j.label));if(b)f.attr("checked",c==i),g.isOptionEnabled&&!g.isOptionEnabled(i)&&f.attr("disabled","disabled"),h=h.add(f);else{b=j.isChecked(c);f.attr("checked",b);g.isOptionEnabled&&!g.isOptionEnabled(i)&&f.attr("disabled","disabled");var n=n.add(f),J=a("<input />").attr("id",i).attr("type","text").toggle(b);
b?J.val(j.transformInput(c)):j.initialValue&&J.val(j.initialValue);J.change(function(){v(d,j.transformOutput(this.value),!1)});e.find("div").append(J);f.data("custom",J)}}h.change(function(){n.each(function(b,f){a(f).data("custom").hide()});v(this.name,this.value,!1)});n.change(function(){var b=a(this).data("custom").show();b.focus().select();0<b.val().length&&b.trigger("change")})}function l(d,c,g,e){d=a("<input />").attr("id",d).attr("name",d).attr("type","checkbox");d.attr("checked",c);d.change(function(){v(this.name,
this.checked,!1)});e.find("label").append(d)}function h(d,c,g,e){d=a("<input />").attr("id",d).attr("name",d).attr("type","text");d.attr("value",c);d.change(function(){v(this.name,this.value,!1)});e.find("label").append(d);return d}function r(d,c,g,e){var h=a("<span />").attr("id",d);a.each(g.links,function(d,c){a("<a href='#'>"+d+"</a>").click(c).appendTo(h);h.append("<span> </span>")});e.find("label").append(h)}function p(d,c,g,e){function h(a,b){var f={};f[g.lower]=g.valueSuffix?a.values[0]+g.valueSuffix:
a.values[0];f[g.upper]=g.valueSuffix?a.values[1]+g.valueSuffix:a.values[1];v(f,void 0,b)}var i=a("<input />").attr("id",g.lower).attr("name",g.lower).attr("type","text").attr("class","number rangeLower"),j=a("<input />").attr("id",g.upper).attr("name",g.upper).attr("type","text").attr("class","number rangeUpper"),d=c[g.lower],c=c[g.upper];g.valueSuffix&&(d=d.substring(0,d.length-g.valueSuffix.length),c=c.substring(0,c.length-g.valueSuffix.length));i.val(d);j.val(c);i.bind("change",function(){a(this).data("slider").slider("values",
0,this.value)});j.bind("change",function(){a(this).data("slider").slider("values",1,this.value)});e.find("label").append(i);c=a("<span class='slider'></span>").slider({min:g.min,max:g.max,range:!0,step:g.step||(g.max-g.min)/20,values:[parseInt(d,10),parseInt(c,10)],slide:function(a,b){i.val(t(b.values[0],2));j.val(t(b.values[1],2));g.immediate&&h(b,!0)},change:function(a,b){h(b,!1)}});c.insertAfter(i);e.find("label").after(j);i.add(j).data("slider",c)}function s(d,c,g,e){var h=a("<input />").attr("id",
d).attr("name",d).attr("type","text").attr("class","number rangeLower"),c=g.valueSuffix?c.substring(0,c.length-g.valueSuffix.length):c;h.attr("value",c);h.change(function(){a(this).data("slider").slider("value",this.value)});e.find("label").append(h);e=a("<span class='slider'></span>").slider({min:g.min,max:g.max,step:g.step||(g.max-g.min)/20,value:c,slide:function(a,c){h.val(t(c.value,2));g.immediate&&v(d,g.valueSuffix?c.value+g.valueSuffix:c.value,!0)},change:function(a,c){v(d,g.valueSuffix?c.value+
g.valueSuffix:c.value,!1)}});e.insertAfter(h);h.data("slider",e)}function y(d,c,g,e){function h(b,a,f){b.is(".hsb")?b.val(t(f.a/100,2)+", "+t(f.h/360,2)+", "+t(f.s/100,2)+", "+t(f.b/100,2)):b.is(".css-rgba")?b.val(j(i(a),f.a)):b.is(".css-hsla")?b.val(l(f)):(f=Math.round(2.55*f.a).toString(16),1==f.length&&(f="0"+f),b.val(f+a));return b}function i(b){if(!(8!=b.length&&6!=b.length))return 6==b.length&&(b="00"+b),{a:parseInt(b.substring(0,2),16)/2.55,r:parseInt(b.substring(2,4),16),g:parseInt(b.substring(4,
6),16),b:parseInt(b.substring(6,8),16)}}function j(b,a){return"rgba("+b.r+", "+b.g+", "+b.b+", "+t(a/100,2)+")"}function l(b){b.s/=100;b.b/=100;var a=(2-b.s)*b.b,f=b.s*b.b,d=1>=a?a:2-a;0!=d&&(f/=d);a/=2;b.s*=100;b.b*=100;return"hsla("+b.h+", "+(100*f).toFixed(0)+"%, "+(100*a).toFixed(0)+"%, "+t(b.a/100,2)+")"}function b(b,a){var f=b.attr("class");if(/hsb/.test(f))return f=a.split(","),f=!f||4!=f.length?void 0:{a:100*parseFloat(f[0]),h:360*parseFloat(f[1]),s:100*parseFloat(f[2]),b:100*parseFloat(f[3])},
f;if(/css-rgba/.test(f))return f=/rgba\(\s*([^,]+),\s*([^,]+),\s*([^,]+),\s*([^,]+)\s*\)/.exec(a),!f||5!=f.length?void 0:{r:parseFloat(f[1]),g:parseFloat(f[2]),b:parseFloat(f[3]),a:100*parseFloat(f[4])};if(/css-hsla/.test(f)){f=/hsla\(\s*([^,]+),\s*([^,%]+)%,\s*([^,%]+)%,\s*([^,]+)\s*\)/.exec(a);if(!f||5!=f.length)return;var d=parseFloat(f[2])/100,c=parseFloat(f[3])/100,c=2*c,d=d*(1>=c?c:2-c);return{h:parseFloat(f[1]),s:100*2*d/(c+d),b:100*(c+d)/2,a:100*parseFloat(f[4])}}return i(a)}var f=a("<input />").attr("id",
d).attr("name",d).attr("value",c).attr("type","text").attr("class","color");"hsb"==g.model&&f.addClass("hsb");"css-rgba"==g.model&&f.addClass("css-rgba");"css-hsla"==g.model&&f.addClass("css-hsla");f.ColorPicker({onChange:function(b,f){var d=a(this).data("colorpicker");h(a(d.el),f,b).trigger("colorchange",[d]);g.immediate&&v(d.el.name,d.el.value,!0)},onSubmit:function(b,f,d,c){h(a(c),f,b).ColorPickerHide().trigger("colorchange");v(c.name,c.value,!1)},onCancel:function(b,f,d,c){h(a(c),f,b).ColorPickerHide().trigger("colorchange")}}).bind("colorchange",
function(){var b=a("#"+f.data("colorpickerId")).data("colorpicker").colorRgb;a(this).next().children("span").eq(0).css("background-color","rgb("+b.r+", "+b.g+", "+b.b+")").css("opacity",b.a/100)}).keyup(function(){var d=a(this),c=b(f,d.val());c&&d.ColorPickerSetColor(c,!0).trigger("colorchange")});(d=b(f,c))&&f.ColorPickerSetColor(d);e.find("label").append(f);f.after(" <span><span></span></span>").trigger("colorchange")}function w(d,c){j.fontSizeProperties&&("undefined"!=typeof c.fontSizeUnit&&(i.fontSizeUnit=
c.fontSizeUnit,delete c.fontSizeUnit,a.each(j.fontSizeProperties,function(a){var e=d[a];"undefined"!=typeof e&&(c[a]=e)})),a.each(j.fontSizeProperties,function(a){var d=c[a];"undefined"!=typeof d&&("string"==typeof d&&(d=d.replace(/[^\d]/,"")),c[a]=d+i.fontSizeUnit)}))}function t(a,d){var c=Math.pow(10,d||0);return Math.round(a*c)/c}var j=a.extend({},{metadata:{},help:{},values:{},defaults:{},onChange:function(){},ignoredInExportToJs:{}},e),e=j.metadata,i=a.extend({},j.values,{fontSizeUnit:j.values.fontSizeUnit||
""}),F=a.extend({},j.ignoredInExportToJs,{fontSizeUnit:!0}),z=this,B=j.onChange;a.each(j.fontSizeProperties,function(a){/%/.test(i[a])&&(i[a]=i[a].replace(/%/g,""))});for(var G in e){var E=e[G],x=a("<fieldset></fieldset>");a("<legend></legend>").text(E.label).appendTo(x);var K=a("<ul></ul>").appendTo(x),k;for(k in E.settings){var m=E.settings[k],u=a("<li />"),I=a("enum"==m.type?"<div class='label' />":"<label />").appendTo(u),I=a("<span />").text(m.label).appendTo(I),D=[];c(k)?D.push(k):"range"==
m.type&&(c(m.lower)&&D.push(m.lower),c(m.upper)&&D.push(m.upper));0<D.length&&(!a.browser.msie||8<=a.browser.version)&&a("<em>&nbsp;</em>").data("optionId",D).appendTo(I).click(q);switch(m.type){case "color":y(k,i[k],m,u);break;case "enum":d(k,i[k],m,u);break;case "number":s(k,i[k],m,u);break;case "range":p(k,i,m,u);break;case "boolean":l(k,i[k],m,u);break;case "string":h(k,i[k],m,u);break;case "font":h(k,i[k],m,u).fontSelector(m.families);break;case "links":r(k,i[k],m,u)}K.append(u);m.note&&K.append(a("<div class='label'>"+
m.note+"</div>"))}z.append(x)}a(document).mousedown(function(d){0==a(d.target).closest("div.help").size()&&a("div.help").remove()}).keydown(function(d){27==(d.charCode||d.keyCode||-1)&&a("div.help").remove()});x=a("<fieldset class='folded'></fieldset>").append("<legend>Options as JavaScript</legend>");x.append("<div>Current values of all options, copy and paste into your code.</div>");var L=a("<label><input type='checkbox' checked='checked' /> Show only values different from defaults</label>)");x.append(L);
var N=x.append("<div><pre></pre></div>").find("div:has(pre)").bind("change",function(){function d(a){switch(Object.prototype.toString.call(a)){case "[object Array]":var b="[ ";0<a.length&&(b+=d(a[0]));for(var f=1;f<a.length;f++)b+=", ",b+=d(a[f]);return b+" ]";case "[object String]":return'"'+a+'"';default:return null!==a?a.toString():"null"}}var c=L.find("input").is(":checked"),e="{",h=0,l=a.extend({},i);w(l,l);for(var n in l)if(!F[n]){var k=l[n];"function"==typeof k||c&&j.defaults[n]==k||(e+="\n  "+
n+": "+d(k)+",",h++)}0<h&&(e=e.substring(0,e.length-1));e+="\n}\n";a(this).html(a("<pre class='brush: js' />").text(e));window.SyntaxHighlighter.highlight({},a(this).find("pre").get(0))}).trigger("change");L.find("input").click(function(){N.trigger("change")});z.append(x);var v,A=0,M;v=function(d,c,e){function h(){var e=Date.now(),g;"object"===typeof d&&void 0===c?g=d:(g={},g[d]=c);w(i,g);a.extend(i,g);N.trigger("change");B.call(z,g);A=(Date.now()-e+A)/2}window.clearTimeout(M);!e||!A||100>A?setTimeout(h,
0):M=window.setTimeout(h,A)};return this};a.fn.fontSelector=function(e){var c;c="Arial, Helvetica, sans-serif;Courier New, Courier New, Courier, monospace;Georgia, serif;Impact, Charcoal, sans-serif;Tahoma, Geneva, sans-serif;Times New Roman, Times, serif;Trebuchet MS, Helvetica, sans-serif;Verdana, Geneva, sans-serif".split(";");if(e){for(var q=0;q<e.length;q++)c.push(e[q]);c.sort()}return this.each(function(){var d=this,e=a('<ul class="fontselector"></ul>');a("body").prepend(e);a(e).hide();a.each(c,
function(d,c){a(e).append('<li><a href="#" class="font_'+d+'" style="font-family: '+c+'">'+c.split(",")[0]+"</a></li>")});a(d).click(function(c){c.preventDefault();c.stopPropagation();a(e).show();a(e).css({top:a(d).offset().top+a(d).height()+4,left:a(d).offset().left});a(this).blur();return!1});a(e).find("a").click(function(){var h=c[a(this).attr("class").split("_")[1]];a(e).hide();a(d).val(h).trigger("change");return!1})})};a("body").click(function(){a(".fontselector").hide()})})(window.jQuery);(function(a){var e,c=65,q={eventName:"click",onShow:function(){},onBeforeShow:function(){},onHide:function(){},onChange:function(){},onSubmit:function(){},onCancel:function(){},color:"ff0000",livePreview:!0,flat:!1},d=function(b,f){var d=n(b);a(f).data("colorpicker").fields.eq(1).val(d.r).end().eq(2).val(d.g).end().eq(3).val(d.b).end()},l=function(b,f){a(f).data("colorpicker").fields.eq(4).val(Math.round(b.h)).end().eq(5).val(Math.round(b.s)).end().eq(6).val(Math.round(b.b)).end()},h=function(b,f){a(f).data("colorpicker").fields.eq(0).val(C(b)).end()},
r=function(b,f){a(f).data("colorpicker").fields.eq(7).val(Math.round(b.a)).end()},p=function(b,f){a(f).data("colorpicker").selector.css("backgroundColor","#"+C({h:b.h,s:100,b:100}));a(f).data("colorpicker").selectorIndic.css({left:parseInt(150*b.s/100,10),top:parseInt(150*(100-b.b)/100,10)})},s=function(b,f){a(f).data("colorpicker").hue.css("top",parseInt(150-150*b.h/360,10))},y=function(b,f){t(b,a(f).data("colorpicker").currentColor)},w=function(b,f){t(b,a(f).data("colorpicker").newColor)},t=function(b,
a){var d=n(b);a.css("backgroundColor","rgb("+d.r+", "+d.g+", "+d.b+")");a.css("opacity",b.a/100)},j=function(b){b=b.charCode||b.keyCode||-1;if(b>c&&90>=b||32==b)return!1;!0===a(this).parent().parent().data("colorpicker").livePreview&&i.apply(this)},i=function(b){var f=a(this).parent().parent(),c;if(0<this.parentNode.className.indexOf("_hex")){c=f.data("colorpicker");var e=this.value,i=6-e.length;if(0<i){for(var j=[],k=0;k<i;k++)j.push("0");j.push(e);e=j.join("")}e=H(O(e));c.color=c=e}else 0<this.parentNode.className.indexOf("_hsb")||
0<this.parentNode.className.indexOf("_a")?f.data("colorpicker").color=c=g({h:parseInt(f.data("colorpicker").fields.eq(4).val(),10),s:parseInt(f.data("colorpicker").fields.eq(5).val(),10),b:parseInt(f.data("colorpicker").fields.eq(6).val(),10)}):(c=f.data("colorpicker"),e={r:parseInt(f.data("colorpicker").fields.eq(1).val(),10),g:parseInt(f.data("colorpicker").fields.eq(2).val(),10),b:parseInt(f.data("colorpicker").fields.eq(3).val(),10)},e={r:Math.min(255,Math.max(0,e.r)),g:Math.min(255,Math.max(0,
e.g)),b:Math.min(255,Math.max(0,e.b)),a:Math.min(100,Math.max(0,e.a))},c.color=c=H(e));f.data("colorpicker").color.a=c.a=parseInt(f.data("colorpicker").fields.eq(7).val(),10);f.data("colorpicker").colorRgb=n(c);b&&(d(c,f.get(0)),h(c,f.get(0)),l(c,f.get(0)));p(c,f.get(0));s(c,f.get(0));w(c,f.get(0));f.data("colorpicker").onChange.apply(f,[c,C(c),n(c)])},F=function(){a(this).parent().parent().data("colorpicker").fields.parent().removeClass("colorpicker_focus")},z=function(){c=0<this.parentNode.className.indexOf("_hex")?
70:65;a(this).parent().parent().data("colorpicker").fields.parent().removeClass("colorpicker_focus");a(this).parent().addClass("colorpicker_focus")},B=function(b){var f=a(this).parent().find("input").focus(),b={el:a(this).parent().addClass("colorpicker_slider"),max:0<this.parentNode.className.indexOf("_hsb_h")?360:0<this.parentNode.className.indexOf("_hsb")||0<this.parentNode.className.indexOf("_a")?100:255,y:b.pageY,field:f,val:parseInt(f.val(),10),preview:a(this).parent().parent().data("colorpicker").livePreview};
a(document).bind("mouseup",b,E);a(document).bind("mousemove",b,G)},G=function(b){b.data.field.val(Math.max(0,Math.min(b.data.max,parseInt(b.data.val+b.pageY-b.data.y,10))));b.data.preview&&i.apply(b.data.field.get(0),[!0]);return!1},E=function(b){i.apply(b.data.field.get(0),[!0]);b.data.el.removeClass("colorpicker_slider").find("input").focus();a(document).unbind("mouseup",E);a(document).unbind("mousemove",G);return!1},x=function(){var b={cal:a(this).parent(),y:a(this).offset().top};b.preview=b.cal.data("colorpicker").livePreview;
a(document).bind("mouseup",b,k);a(document).bind("mousemove",b,K)},K=function(b){i.apply(b.data.cal.data("colorpicker").fields.eq(4).val(parseInt(360*(150-Math.max(0,Math.min(150,b.pageY-b.data.y)))/150,10)).get(0),[b.data.preview]);return!1},k=function(b){d(b.data.cal.data("colorpicker").color,b.data.cal.get(0));h(b.data.cal.data("colorpicker").color,b.data.cal.get(0));a(document).unbind("mouseup",k);a(document).unbind("mousemove",K);return!1},m=function(){var b={cal:a(this).parent(),pos:a(this).offset()};
b.preview=b.cal.data("colorpicker").livePreview;a(document).bind("mouseup",b,I);a(document).bind("mousemove",b,u)},u=function(b){i.apply(b.data.cal.data("colorpicker").fields.eq(6).val(parseInt(100*(150-Math.max(0,Math.min(150,b.pageY-b.data.pos.top)))/150,10)).end().eq(5).val(parseInt(100*Math.max(0,Math.min(150,b.pageX-b.data.pos.left))/150,10)).get(0),[b.data.preview]);return!1},I=function(b){d(b.data.cal.data("colorpicker").color,b.data.cal.get(0));h(b.data.cal.data("colorpicker").color,b.data.cal.get(0));
a(document).unbind("mouseup",I);a(document).unbind("mousemove",u);return!1},D=function(){a(this).addClass("colorpicker_focus")},L=function(){a(this).removeClass("colorpicker_focus")},N=function(){var b=a(this).parent(),f=b.data("colorpicker").color;b.data("colorpicker").origColor=f;y(f,b.get(0));b.data("colorpicker").onSubmit(f,C(f),n(f),b.data("colorpicker").el)},v=function(){var b=a(this).parent();b.find(">div.colorpicker_current_color").trigger("click");b=b.data("colorpicker");b.onCancel(b.color,
C(b.color),n(b.color),b.el)},A=function(){var b,f,c,d=a("#"+a(this).data("colorpickerId"));d.data("colorpicker").onBeforeShow.apply(this,[d.get(0)]);var e=a(this).offset(),h="CSS1Compat"==document.compatMode;b=window.pageXOffset||(h?document.documentElement.scrollLeft:document.body.scrollLeft);f=window.pageYOffset||(h?document.documentElement.scrollTop:document.body.scrollTop);c=window.innerWidth||(h?document.documentElement.clientWidth:document.body.clientWidth);var g=e.top+this.offsetHeight,e=e.left;
g+220>f+(window.innerHeight||(h?document.documentElement.clientHeight:document.body.clientHeight))&&(g-=this.offsetHeight+220);e+356>b+c&&(e-=180);d.css({left:e+"px",top:g+"px"});!1!=d.data("colorpicker").onShow.apply(this,[d.get(0)])&&d.show();a(document).bind("mousedown",{cal:d,cb:function(){d.find("div.colorpicker_cancel").trigger("click")}},P).bind("keydown",{cal:d},M);return!1},M=function(b){27==(b.charCode||b.keyCode||-1)&&b.data.cal.find("div.colorpicker_cancel").trigger("click")},P=function(b){!Q(b.data.cal.get(0),
b.target,b.data.cal.get(0))&&!Q(b.data.cal.data("colorpicker").el,b.target,document)&&(!1!=b.data.cal.data("colorpicker").onHide.apply(this,[b.data.cal.get(0)])&&(b.data.cb?b.data.cb():b.data.cal.hide()),a(document).unbind("mousedown",P).unbind("keydown",M))},Q=function(b,a,d){if(b==a)return!0;if(b.contains)return b.contains(a);if(b.compareDocumentPosition)return!!(b.compareDocumentPosition(a)&16);for(a=a.parentNode;a&&a!=d;){if(a==b)return!0;a=a.parentNode}return!1},g=function(b){return{h:Math.min(360,
Math.max(0,b.h)),s:Math.min(100,Math.max(0,b.s)),b:Math.min(100,Math.max(0,b.b)),a:Math.min(100,Math.max(0,b.a))}},O=function(b){b=parseInt(-1<b.indexOf("#")?b.substring(1):b,16);return{r:b>>16,g:(b&65280)>>8,b:b&255}},H=function(b){var a={h:0,s:0,b:0,a:b.a},d=Math.min(b.r,b.g,b.b),c=Math.max(b.r,b.g,b.b),d=c-d;a.b=c;a.s=0!=c?255*d/c:0;a.h=0!=a.s?b.r==c?(b.g-b.b)/d:b.g==c?2+(b.b-b.r)/d:4+(b.r-b.g)/d:-1;a.h*=60;0>a.h&&(a.h+=360);a.s*=100/255;a.b*=100/255;return a},n=function(b){var a,d,c;a=Math.round(b.h);
var e=Math.round(255*b.s/100),h=Math.round(255*b.b/100);if(0==e)a=d=c=h;else{var e=(255-e)*h/255,g=(h-e)*(a%60)/60;360==a&&(a=0);60>a?(a=h,c=e,d=e+g):120>a?(d=h,c=e,a=h-g):180>a?(d=h,a=e,c=e+g):240>a?(c=h,a=e,d=h-g):300>a?(c=h,d=e,a=e+g):360>a?(a=h,d=e,c=h-g):c=d=a=0}return{r:Math.round(a),g:Math.round(d),b:Math.round(c),a:b.a}},C=function(b){var b=n(b),d=[b.r.toString(16),b.g.toString(16),b.b.toString(16)];a.each(d,function(a,b){1==b.length&&(d[a]="0"+b)});return d.join("")},R=function(){var b=a(this).parent(),
c=b.data("colorpicker"),e=c.origColor;c.color=e;c.colorRgb=n(e);d(e,b.get(0));h(e,b.get(0));l(e,b.get(0));r(e,b.get(0));p(e,b.get(0));s(e,b.get(0));w(e,b.get(0));c.onChange.apply(b,[e,C(e),n(e)])};e=C;a.fn.extend({ColorPicker:function(b){b=a.extend({},q,b||{});if("string"==typeof b.color)b.color=H(O(b.color));else if(void 0!=b.color.r&&void 0!=b.color.g&&void 0!=b.color.b)b.color=H(b.color);else if(void 0!=b.color.h&&void 0!=b.color.s&&void 0!=b.color.b)b.color=g(b.color);else return this;return this.each(function(){if(!a(this).data("colorpickerId")){var c=
a.extend({},b);c.origColor=b.color;var e="collorpicker_"+parseInt(1E3*Math.random(),10);a(this).data("colorpickerId",e);var g=a('<div class="colorpicker"><div class="colorpicker_color"><div><div></div></div></div><div class="colorpicker_hue"><div></div></div><div class="colorpicker_new_color"></div><div class="colorpicker_current_color"></div><div class="colorpicker_hex"><input type="text" maxlength="6" size="6" /></div><div class="colorpicker_rgb_r colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_rgb_g colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_rgb_b colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_hsb_h colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_hsb_s colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_hsb_b colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_a colorpicker_field"><input type="text" maxlength="3" size="3" /><span></span></div><div class="colorpicker_submit"></div><div class="colorpicker_cancel"></div></div>').attr("id",
e);c.flat?g.appendTo(this).show():g.appendTo(document.body);c.fields=g.find("input").bind("keyup",j).bind("change",i).bind("blur",F).bind("focus",z);g.find("span").bind("mousedown",B).end().find(">div.colorpicker_current_color").bind("click",R);c.selector=g.find("div.colorpicker_color").bind("mousedown",m);c.selectorIndic=c.selector.find("div div");c.el=this;c.hue=g.find("div.colorpicker_hue div");g.find("div.colorpicker_hue").bind("mousedown",x);c.newColor=g.find("div.colorpicker_new_color");c.currentColor=
g.find("div.colorpicker_current_color");g.data("colorpicker",c);g.find("div.colorpicker_submit, div.colorpicker_cancel").bind("mouseenter",D).bind("mouseleave",L);g.find("div.colorpicker_submit").bind("click",N);g.find("div.colorpicker_cancel").bind("click",v);d(c.color,g.get(0));l(c.color,g.get(0));h(c.color,g.get(0));s(c.color,g.get(0));p(c.color,g.get(0));y(c.color,g.get(0));w(c.color,g.get(0));c.flat?g.css({position:"relative",display:"block"}):a(this).bind(c.eventName,A).bind("keydown",function(a){13==
(a.charCode||a.keyCode||-1)&&g.find("div.colorpicker_submit").trigger("click")})}})},ColorPickerHide:function(){return this.each(function(){a(this).data("colorpickerId")&&a("#"+a(this).data("colorpickerId")).hide()})},ColorPickerShow:function(){return this.each(function(){a(this).data("colorpickerId")&&A.apply(this)})},ColorPickerSetColor:function(b,c){if("string"==typeof b)b=H(O(b));else if(void 0!=b.r&&void 0!=b.g&&void 0!=b.b)b=H(b);else if(void 0!=b.h&&void 0!=b.s&&void 0!=b.b)b=g(b);else return this;
return this.each(function(){if(a(this).data("colorpickerId")){var e=a("#"+a(this).data("colorpickerId"));e.data("colorpicker").color=b;c||(e.data("colorpicker").origColor=b);e.data("colorpicker").colorRgb=n(b);d(b,e.get(0));l(b,e.get(0));h(b,e.get(0));r(b,e.get(0));s(b,e.get(0));p(b,e.get(0));c||y(b,e.get(0));w(b,e.get(0))}})}});a.extend({HSBToHex:e})})(window.jQuery);var carrotSearchVisualizationHelp={supported:{help:"            A static field equal to <tt>true</tt> if FoamTree is supported            on the current browser. <strong>Note:</strong> as opposed to other            options, this field can only be accessed statically directly            from the <tt>CarrotSearchFoamTree</tt> as shown in the examples below.          "},id:{help:"            Identifier of the DOM element into which the visualization is to            be embedded.          "},dataObject:{help:"<p>              The data to visualize. The object must contain the              <tt>groups</tt> property with an array of objects representing              individual groups. Each group can contain the following              properties:            </p><ul><li><tt>id</tt>: (optional, String) unique identifier of the group. Group                identifiers are required only for programmatic changes of group                <tt>selection</tt>.              </li><li><tt>label</tt>: (required, String) textual description of the                group that will be drawn in the center of the group's polygon.                For best results, use labels not longer than a dozen of words.              </li><li><p><tt>weight</tt>: (optional, Number &gt;= 0) weight of the group relative                  to other groups. The larger the weight, the more space the group's                  polygon will occupy on the screen. Good values for the weight property                  could be e.g. the number of documents in a cluster or the score of                  the cluster.                </p><p>                  Group weights must be non-negative. Zero-weight groups can receive                  special treatment, see the <tt>showZeroWeightGroups</tt> option.                </p><p>                  If a group's weight is not specified, FoamTree will assume the weight                  is <tt>1.0</tt>.                </p><p><strong>Note:</strong> Currently, group weights                  serve only as a hint to the layout engine, the areas of polygons will                  not fully correspond to the weights of the respective groups.                  You can use the <tt>aspectRatioImprovementSteps</tt> and                  <tt>groupWeightScaling</tt> options to further influence the relative                  areas of the polygons.                </p></li><li><tt>groups</tt>: (optional, Array) an array of subgroups of the group.              </li></ul><p>              The input data object can contain properties other than the ones              required by FoamTree. Such properties will be ignored by FoamTree, but              can be used customization code, such as the <tt>groupColorDecorator</tt>              callback.            </p>"},
backgroundColor:{help:"            Background color of the visualization. Visualizations with fully opaque            or fully-transparent background color are slightly faster to draw.          "},rainbowStartColor:{help:"            Start color to use for the group coloring rainbow.          "},rainbowEndColor:{help:"            End color to use for the group coloring rainbow.          "},labelDarkColor:{help:"            The label color to use on bright-coloured groups.          "},labelLightColor:{help:"            The label color to use on dark-coloured groups.          "},
labelColorThreshold:{help:"<p>              Determines the group brightness level below which <tt>labelLightColor</tt>              and above which <tt>labelDarkColor</tt> are used for drawing labels.            </p><p>              If this threshold is <tt>0.0</tt>, only the <tt>labelDarkColor</tt>              will be used. If this threshold is <tt>1.0</tt>, only the <tt>labelLightColor</tt>              color will be used. Otherwise, both colors will be used based on the lightness              of the group.            </p>"},
groupColorDecorator:{help:"<p>              Allows to customize or completely replace the default rainbow colors of groups.              During each redraw, FoamTree will call the provided function once              for each group, in depth-first order. The task of the function is to modify              or completely replace the default color of the group. The new color can be              a derivative of various properties of the group, such as its nesting level,              number of siblings, or, most likely, custom properties passed              along with the data model.            </p><p>              The signature of the function should be the following:            </p><p><tt>function (options, properties, variables)</tt></p><p>              where:            </p><ul><li><tt>options</tt>: all visualization options, keys correspond to option names,                values correspond to current option values.              </li><li><p><tt>properties</tt>: object with properties relating to the group being coloured.                  The object contains the following properties:                </p><ul><li><tt>group</tt>: the data object corresponding to the group, exactly as                    passed in the <tt>dataObject</tt> option.                  </li><li><tt>weightNormalized</tt>: the weight of the group normalized to the 0..1 range                    in relation the group's siblings. The unnormalized weight of the group can be                    retrieved from the group data object.                  </li><li><tt>index</tt>: the position of the group relative to its siblings in the input                    data object. Position indices start at 0.                  </li><li><tt>indexByWeight</tt>: the position of the group relative to its siblings                    in the decreasing weight order, 0 index corresponds to the highest-weight group.                  </li><li><tt>siblingCount</tt>: the number of immediate siblings of the group.                  </li><li><tt>level</tt>: the nesting level of the group. Level numbers                    start with 0.                  </li><li><tt>hasChildren</tt>: <tt>true</tt> if the group has child groups and the                    groups will be drawn. Please note that depending on the value of the                    <tt>minGroupDiameter</tt> option, child groups may not be drawn, in which                    case this property will be <tt>false</tt>.                  </li><li><tt>selected</tt>: <tt>true</tt> if the group selected.                  </li><li><tt>polygonCenterX</tt>: the X coordinate of the centroid of the group's polygon                  </li><li><tt>polygonCenterY</tt>: the Y coordinate of the centroid of the group's polygon                  </li><li><tt>transitionProgress</tt>: a 0..1 number indicating how far the animated                    transition of has progressed, 1 means a completed transition or API-triggered                    <tt>redraw</tt>.                  </li></ul></li><li><p><tt>variables</tt>: object with color-related variables this function can change.                  The function can either change some of the properties of the variable objects                  or it can entirely replace the variables.                </p><p>                  Each color variable can be a string with CSS3 <tt>hsl</tt>, <tt>hsla</tt>, <tt>rgb</tt> or                  <tt>rgba</tt> color specification or an object containing the following properties:                </p><ul><li><tt>model</tt>: <tt>rgba</tt> for the RGBA model, <tt>hsla</tt> for the HSLA model.                    When adding or changing the values of other properties, it is important to                    set this property to reflect the desired color model.                  </li><li><tt>r</tt>, <tt>g</tt>, <tt>b</tt>: the RGB values if the model is RGBA,                    integers in the 0..255 range.                  </li><li><tt>h</tt>: the hue value if the model is HSL, number in the 0..359 range.                  </li><li><tt>s</tt>: the saturation value if the model is HSL, number in the 0..100 range.                  </li><li><tt>l</tt>: the lightness value if the model is HSL, number in the 0..100 range.                  </li><li><tt>a</tt>: the transparency value for both models, number in the 0..1 range.                  </li></ul><p>                  The following variables are available:                </p><ul><li><p><tt>groupColor</tt>: the default color computed for the group, in HSL model.                      The alpha channel for the color does not have the <tt>groupOverlayOpacity</tt>                      applied and there is no need to apply it in the decorator; FoamTree will apply                      <tt>groupOverlayOpacity</tt> during rendering.                    </p><p>                      The decorator does not have to modify colors of groups at all levels of the                      hierarchy. If group colors at a certain level are not modified by the decorator,                      FoamTree will automatically apply the brightness-based variations of the parent                      group's color to the child groups. Therefore, to completely change the color                      scheme of the visualization, it is enough to modify the colors of the groups at                      level 0, colors at other levels will be computed automatically.                    </p></li><li><p><tt>labelColor</tt>: the label color computed to match the default color of the group.                      The label color is defined only when the labels are to be drawn, it will be                      <tt>undefined</tt> when labels are not drawn, e.g. during rollout animation.                    </p><p>                      In addition to the modification of the color variable, you can also replace it                      with the string <tt>\"auto\"</tt>, which will cause FoamTree to recompute the label                      color again to match the changed group color.                    </p></li></ul></li></ul><p><strong>Note</strong>: this function will also be called during the rollout              animation, so the number of calls can be fairly large (animation frames * number of              groups). To keep the animation smooth, color computation should be as fast as possible.            </p><p><strong>Tip</strong>: animated color models can be created by making the color              dependant on time and calling the <tt>redraw</tt> function in regular intervals.            </p>"},
groupGradientType:{help:"<p>              The type of gradient to use for filling the groups. The following values              are supported:            </p><ul><li><tt>none</tt>: plain color fill, faster to draw than gradient fills.              </li><li><tt>lightening</tt>: radial gradient fill, gradient from the group's                base color to its lighter variation              </li><li><tt>darkening</tt>: radial gradient fill, gradient from the group's                base color to its darker variation              </li></ul><p></p>"},
groupGradientStrength:{help:"            The strength of the group fill gradient. The larger the strength, the mode            lightening/darkening is applied to the base color to obtain the other            color of the gradient. Setting <tt>groupGradientStrength</tt> to zero            effectively disables gradient fill.          "},groupGradientRadius:{help:"            Radius of the gradient fill in relation to the size of the polygon representing            the group.          "},groupOverlayOpacity:{help:"<p>              Parent group overlay opacity. By default, lower-level              groups are hidden below a semi-transparent layer that shows              the group's label and allows selection.              After the user double clicks the group,              the overlay is lifted to fully reveal the              child groups.            </p><p>              Setting <tt>groupOverlayOpacity</tt> to <tt>1.0</tt> makes              the overlay fully opaque, no child groups will be visible              until the user double clicks the group. Values between              <tt>1.0</tt> and <tt>0.0</tt> will render a partially-transparent              overlay.            </p><p>              Setting <tt>groupOverlayOpacity</tt> to <tt>0.0</tt> will              permanently disable the overlay. As a result, only the              lowest-level groups will be visible.            </p>"},
groupBorderWidth:{help:"            Width of the border between groups.          "},groupInsetWidth:{help:"            Width of the internal margin to apply to the parent group when drawing its child groups.          "},groupBorderRadius:{help:"            Radius of the group borders. The radius of 0 disables rounding of borders and            slightly speeds-up rendering.          "},groupBorderWidthScaling:{help:"            The scaling factor to apply when drawing borders of child groups. Border with of a child            group will be <tt>groupBorderWidthScaling</tt> smaller than the border width of            the immediate parent group. Setting <tt>groupBorderWidthScaling</tt> to 1.0 will            draw borders of equal widths on all levels of the group hierarchy.          "},
groupFontFamily:{help:"            Font family to use for drawing group labels. CSS-compliant font family specifications            are supported, including those imported using the @font-face syntax.          "},groupMinFontSize:{help:"            Minimum font size to use for drawing labels inside groups.            Two font sizing strategies are supported:            <p><ul><li>                  absolute: when the property is set to a numeric value, such as <tt>27</tt>,                  the value will be interpreted as the number of pixels                </li><li><p>                    relative: when the property is set to a percentage, such as <tt>40%</tt>,                    the font size will be calculated as a percentage of the group's                    height.                  </p><p>                    Relative font sizes may be useful when the total size of the visualization                    varies in a large range. In such cases, absolute font sizing would result                    in either too small or too large fonts and truncation of label texts.                  </p></li></ul></p>"},
groupMaxFontSize:{help:"            Maximum font size to use for drawing labels inside groups. See the            <tt>groupMinFontSize</tt> option for the supported font sizing strategies.          "},groupMaxTotalLabelHeight:{help:"            The maximum total height of the label in relation to the height of the            group's polygon.          "},groupLinePadding:{help:"            Line padding of multiline group labels, in pixels.          "},groupLabelDecorator:{help:"<p>              Allows to customize or completely replace the default text of              group labels. When labels are drawn, FoamTree will call the provided function once              for each group, in depth-first order. The task of the function is to modify              or completely replace the default label text. The custom label text              will most likely be based on custom properties passed along with the data model.            </p><p>              The signature of the function should be the following:            </p><p><tt>function (options, properties, variables)</tt></p><p>              where:            </p><ul><li><tt>options</tt>: all visualization options, keys correspond to option names,                values correspond to current option values.              </li><li><p><tt>properties</tt>: object with properties relating to the group being processed.                  The object contains the following properties:                </p><ul><li><tt>group</tt>: the data object corresponding to the group, exactly as                    passed in the <tt>dataObject</tt> option.                  </li><li><tt>weightNormalized</tt>: the weight of the group normalized to the 0..1 range                    in relation the group's siblings. The unnormalized weight of the group can be                    retrieved from the group data object.                  </li><li><tt>index</tt>: the position of the group relative to its siblings in the input                    data object. Position indices start at 0.                  </li><li><tt>indexByWeight</tt>: the position of the group relative to its siblings                    in the decreasing weight order, 0 index corresponds to the highest-weight group.                  </li><li><tt>siblingCount</tt>: the number of immediate siblings of the group.                  </li><li><tt>level</tt>: the nesting level of the group. Level numbers                    start with 0.                  </li><li><tt>hasChildren</tt>: <tt>true</tt> if the group has child groups and the                    groups will be drawn. Please note that depending on the value of the                    <tt>minGroupDiameter</tt> option, child groups may not be drawn, in which                    case this property will be <tt>false</tt>.                  </li><li><tt>selected</tt>: <tt>true</tt> if the group selected.                  </li><li><tt>polygonCenterX</tt>: the X coordinate of the centroid of the group's polygon                  </li><li><tt>polygonCenterY</tt>: the Y coordinate of the centroid of the group's polygon                  </li><li><tt>transitionProgress</tt>: a 0..1 number indicating how far the animated                    transition of has progressed, 1 means a completed transition or API-triggered                    <tt>redraw</tt>.                  </li><li><tt>boxWidth</tt>: width, in pixels, of the bounding box in which the                    label will be drawn. You may want to vary the length of the label                    based on the dimensions of the bounding box.                  </li><li><tt>boxHeight</tt>: height of the label's bounding box in pixels.                  </li></ul></li><li><p><tt>variables</tt>: object with label-related variables this function can change.                  The function can either change some of the properties of the variable objects                  or it can entirely replace the variables.                </p><p>                  The following variables are available:                </p><ul><li><tt>labelText</tt>: the default text of the label, equal to the <tt>label</tt>                    property of the group's data object.                  </li></ul></li></ul>"},
groupSelectionColor:{help:"            Group selection color. When the user selects one or more groups, an overlay            will be drawn in <tt>groupSelectionColor</tt> on all selected groups.          "},groupSelectionOutlineColor:{help:"              Group selection outline color. When the user selects one or more groups, an              outline will be drawn in <tt>groupSelectionOutlineColor</tt> on all selected              groups.            "},groupHoverColor:{help:"            Group hover color. When the user moves the mouse pointer over a group,            an overlay will be drawn in <tt>groupHoverColor</tt>.          "},
groupHoverOutlineColor:{help:"            Group hover outline color. When the user moves the mouse pointer over a group,            an outline will be drawn in <tt>groupHoverOutlineColor</tt>.          "},minGroupDiameter:{help:"            Minimum estimated diameter child groups must have in order to be drawn. To avoid            illegible small labels and to speed up the rendering, FoamTree can be set to            skip drawing child groups if their estimated diameter is smaller than            <tt>minGroupDiameter</tt>. Setting the minimum group diameter to 0 will cause            FoamTree to draw all groups, regardless of their diameter on the screen.          "},
aspectRatioImprovementSteps:{help:"            The strength of polygon aspect ratio improvement algorithm. When            <tt>aspectRatioImprovementSteps</tt> is greater than 0, FoamTree will try to            avoid elongated polygons and prefer round, well-balanced ones. Strong aspect ratio            improvement however, will limit FoamTree's ability to reflect different weights            of groups, all groups will have similar size on the screen, regardless of their            weights.          "},
groupWeightScaling:{help:"            Applies corrective scaling to group weights. Set <tt>groupWeightScaling</tt>            to a value lower than 1 to make the polygon area differences less pronounced.            Value larger than 1 will make the polygon area differences larger. When            <tt>groupWeightScaling</tt> is 1, no scaling is applied.          "},showZeroWeightGroups:{help:"            If <tt>true</tt>, FoamTree will also show groups whose weight is zero.            Zero-weight groups will be rendered as if their weight was slightly smaller than            the smallest non-zero weight of the sibling groups.          "},
pixelRatio:{help:'<p>              The physical-to-display pixel count ratio to assume when drawing the final              visualization. On modern devices with high-density screens (such as the              Retina display) one logical pixel can be mapped to more than one physical pixel.              You can use this option to increase the resolution at which the visualization              is drawn to make the image clearer and labels more legible.            </p><p>              By default, <tt>pixelRatio</tt> is <tt>1</tt>. In such cases, the width and              height of the canvas on which FoamTree is drawn will be equal to the              pixel dimensions of the HTML element FoamTree was embedded in. For              <tt>pixelRatios</tt> less/greater than 1, the pixel dimensions of the canvas              will be smaller/larger than the dimensions of the enclosing HTML element.              For example, if you set <tt>pixelRatio</tt> to 2 and if the size of the              enclosing HTML element is 400x400 pixels, the size of the FoamTree canvas will              be 800x800 pixels. Such a configuration will better utilize the extra pixels              available on e.g. Retina displays.            </p><p><strong>Tip</strong>: on modern browsers, you can retrieve the device-specific              pixel ratio from the <tt>window.devicePixelRatio</tt> property.            </p><p id="ipad-with-retina-performance"><strong>Tip</strong>: to boost the performance on iPad with Retina display with              <tt>pixelRatio = 2</tt>, set the width of the FoamTree HTML element to be at least              one pixel less than the total screen width. Please see the              <a rel="_blank" href="../../../../mobile.html">mobile demo</a> for an example.            </p><p><strong>Important</strong>: when setting <tt>pixelRatio</tt> to a value larger              than 1 on mobile devices, make sure you also correctly set the size of the              page\'s viewport. The default viewport may be very large, leading to a              very large canvas being needlessly allocated. Please see the              <a rel="_blank" href="../../../../mobile.html">mobile demo</a> CSS for an example.            </p>'},
pixelRatioDuringRollout:{help:"<p>              The physical to display pixel count ratio to assume when drawing the              visualization rollout animation.            </p><p>              You can override the default pixel ratio during rollout to a higher value              (e.g. <tt>2</tt> on Retina displays) to have the animation drawn in more detail,              but noticeably slower. You can also set this option to a lower value, e.g.              <tt>0.5</tt> to have the animation drawn faster, but with less detail.            </p>"},
rolloutType:{help:"<p>              The style of the initial animation. The following values are supported:            </p><ul><li><tt>auto</tt>: rollout style chosen automatically to ensure smooth                animation given the current data set and the performance of the client's device.              </li><li><tt>explode</tt>: explosion-like initial animation. This animation type                is most resource demanding, it may not be smooth on slow devices or                for large data sets.              </li><li><tt>fadein</tt>: progressive fading-in. This animatio type is less resource                demanding and should be smooth on most devices and typical data sets.              </li><li><tt>none</tt>: no initial animation.              </li></ul>"},
rolloutSpeed:{help:"            The speed of the initial animation.          "},rolloutRate:{help:"            The rate at which new groups are revealed during the initial animation.          "},siblingRevealingParallelism:{help:"<p>              The level of parallelism of sibling group animation. When              <tt>siblingRevealingParallelism</tt> is 1, all sibling groups              will start revealing their children at the same time. When              <tt>siblingRevealingParallelism</tt> is 0, sibling sites will start              revealing their children one by one.            </p><p>              Values closer to 0 produce more smooth animation, but they may              cause the animation to take a fairly long time. With values closer              to 1, the animation will complete faster but it may be less smooth.            </p>"},
childRevealingParallelism:{help:"<p>              The level of parallelism of child group animation. When              <tt>childRevealingParallelism</tt> is 1, child groups at all levels              will start animating at the same time. When <tt>childRevealingParallelism</tt>              is 0, child groups will start revealing only after the animation of the              parent group has completed.            </p><p>              Values closer to 0 produce more smooth animation, but they may              cause the animation to take slightly longer to complete. With values closer              to 1, the animation will complete faster but it may be less smooth.            </p>"},
groupsVisibleAtRolloutStart:{help:"            The percentage of groups to be visible right at the beginning of the initial            animation, the remaining groups will be revealed during the animation. When            <tt>groupsVisibleAtRolloutStart</tt> is 1, all groups will be revealed at            the start of the animation.          "},explodeDistance:{help:"            The explosion distance, the larger the value, the larger the distance.            Applicable only when <tt>rolloutType</tt> is <tt>explode</tt>            or <tt>auto</tt>.          "},
fadeInTime:{help:"            The fade-in time of the final visualization. When <tt>fadeInTime</tt>            is 0, no fading will be performed.          "},fadeOutTime:{help:"            The time of the fade-out when loading new data. When <tt>fadeOutTime</tt>            is 0, no fading will be applied.          "},drawLabelsDuringRollout:{help:"            If <tt>true</tt>, group labels will be drawn during the initial animation.            Drawing of labels significantly slows down rendering and therefore setting            this optio to <tt>true</tt> is discouraged.          "},
roundBordersDuringRollout:{help:"            If <tt>true</tt>, border rounding will be applied also during the            initial animation. Setting this option to <tt>false</tt> can slightly            increase the smoothness of the animation.          "},attributionText:{help:'<p>              The label of the attribution group. If <tt>attributionText</tt> or              <tt>attributionLogo</tt> is not empty, an extra group is added to the              visualization with the provided text and logo. If <tt>attributionUrl</tt>              is not empty, clicking the attribution group will open the provided              URL in the browser.            </p><p><strong>Note</strong>: The limited demo version of FoamTree does not              allow to disable or change the attribution group. Please              <a rel="_blank" href="http://carrotsearch.com/foamtree-how-to-order">contact Carrot              Search</a> for licensing of a fully customizable distribution.            </p>'},
attributionLogo:{help:'<p>              The logo to display in the attribution group. The logo can be specified              as a relative or absolute HTTP URL or a data URI.            </p><p>              When using HTTP URLs, the image should to be preloaded before FoamTree              starts rendering the visualization. Without preloading, the image may              not be visible in the first rendering of the visualization. For this              reason, the data URIs may be easier to use. You can use services like              <a href="http://dataurl.net" rel="_blank">dataurl.net</a> to convert              your images to data URIs.            </p><p><strong>Note</strong>: The limited demo version of FoamTree does not              allow to disable or change the attribution group. Please              <a rel="_blank" href="http://carrotsearch.com/foamtree-how-to-order">contact Carrot              Search</a> for licensing of a fully customizable distribution.            </p>'},
attributionUrl:{help:'<p>              The URL to open when the user clicks the attribution group.            </p><p><strong>Note</strong>: The limited demo version of FoamTree does not              allow to disable or change the attribution group. Please              <a rel="_blank" href="http://carrotsearch.com/foamtree-how-to-order">contact Carrot              Search</a> for licensing of a fully customizable distribution.            </p>'},maxLabelSizeForTitleBar:{help:"<p>              Maximum group label size in pixels whose label to show in              the title bar. Small size of a group may cause its label to be              drawn in a small font and thus appear illegible. For this reason,              when the user hovers the mouse pointer over a group with a small              label, the label can be shown in a dedicated title bar.            </p><p>              The <tt>maxLabelSizeForTitleBar</tt> defines the threshold below              which group labels will be shown in the title bar. Setting              <tt>maxLabelSizeForTitleBar</tt> to <tt>0</tt> will disable the              title bar completely. Setting the option to a value equal or              larger than <tt>maxFontSize</tt> will cause the title bar to              appear for all groups.            </p>"},
titleBarFontFamily:{help:"            Font family to use for drawing the title bar. CSS-compliant font family specifications            are supported, including those imported using the @font-face syntax.          "},titleBarBackgroundColor:{help:"            Title bar background color.          "},titleBarTextColor:{help:"            Title bar text color.          "},titleBarTextPaddingTopBottom:{help:"            Top and bottom (vertical) padding to draw inside the title bar.          "},titleBarTextPaddingLeftRight:{help:"            Left and right (horizontal) padding to draw inside the title bar.          "},
titleBarMinFontSize:{help:"            Minimum font size to use for drawing labels in the title bar.          "},titleBarMaxFontSize:{help:"            Maximum font size to use for drawing labels in the title bar.          "},titleBarDecorator:{help:"<p>              Allows to customize or completely replace the text displayed in the title              bar. When the title bar is drawn, FoamTree will call the provided function.              The task of the function is to modify or completely replace the default text              or color. The custom label text will most likely be based on custom              properties passed along with the data model.            </p><p>              The signature of the function should be the following:            </p><p><tt>function (options, properties, variables)</tt></p><p>              where:            </p><ul><li><tt>options</tt>: all visualization options, keys correspond to option names,                values correspond to current option values.              </li><li><p><tt>properties</tt>: object with properties relating to the group being processed.                  The object contains the following properties:                </p><ul><li><tt>group</tt>: the data object corresponding to the group for which the title                    bar is being drawn, exactly as passed in the <tt>dataObject</tt> option.                  </li><li><tt>weightNormalized</tt>: the weight of the group normalized to the 0..1 range                    in relation the group's siblings. The unnormalized weight of the group can be                    retrieved from the group data object.                  </li><li><tt>index</tt>: the position of the group relative to its siblings in the input                    data object. Position indices start at 0.                  </li><li><tt>indexByWeight</tt>: the position of the group relative to its siblings                    in the decreasing weight order, 0 index corresponds to the highest-weight group.                  </li><li><tt>siblingCount</tt>: the number of immediate siblings of the group.                  </li><li><tt>level</tt>: the nesting level of the group. Level numbers                    start with 0.                  </li><li><tt>hasChildren</tt>: <tt>true</tt> if the group has child groups and the                    groups will be drawn. Please note that depending on the value of the                    <tt>minGroupDiameter</tt> option, child groups may not be drawn, in which                    case this property will be <tt>false</tt>.                  </li><li><tt>selected</tt>: <tt>true</tt> if the group selected.                  </li><li><tt>polygonCenterX</tt>: the X coordinate of the centroid of the group's polygon                  </li><li><tt>polygonCenterY</tt>: the Y coordinate of the centroid of the group's polygon                  </li><li><tt>transitionProgress</tt>: a 0..1 number indicating how far the animated                    transition of has progressed, 1 means a completed transition or API-triggered                    <tt>redraw</tt>.                  </li><li><tt>boxWidth</tt>: width, in pixels, of the title bar.                    You may want to vary the length of the label                    based on the dimensions of the title bar.                  </li><li><tt>boxHeight</tt>: height of the title bar, in pixels.                  </li></ul></li><li><p><tt>variables</tt>: object with title-bar-related variables this function can change.                  The function can either change some of the properties of the variable objects                  or it can entirely replace the variables.                </p><p>                  The following variables are available:                </p><ul><li><tt>titleBarText</tt>: the default text to display in the title bar, equal                    to the label of the group.                  </li><li><p><tt>titleBarTextColor</tt>: the color to use for drawing title bar text,                      equal to <tt>titleBarTextColor</tt> by default. Please see the documentation of                      <tt>groupColorDecorator</tt> option for the color object format.                    </p></li></ul></li></ul>"},
selection:{help:"<p>              Gets or sets the group selection. When setting the selection, three types of              arguments are accepted:            </p><ul><li><tt>String</tt>: the identifier of the group to select.</li><li><tt>[ String ]</tt>: array of identifiers of the groups to select.</li><li><tt>Object</tt>: object with the following properties:                <ul><li><tt>selected</tt>: <tt>true</tt> to select groups (default), <tt>false</tt> to deselect groups,</li><li><tt>groups</tt>: an array of group identifiers to select, OR</li><li><tt>all</tt>: set to <tt>true</tt> if the change is to affect all groups.</li></ul></li></ul><p>              FoamTree assumes that the identifier of the group is stored in the <tt>id</tt>              property of the group's data object. Please see the <tt>dataObject</tt> option              for data object examples.            </p><p><strong>Note: </strong>selection changes affect only the specified groups, selection of              other groups remains unchanged.            </p><p><strong>Note: </strong>when selection is changed using this option (as opposed to user actions),              no events, such as <tt>onGroupSelectionChanging</tt> or <tt>onGroupSelectionChanged</tt>, will be triggered.            </p><p>              Getting this option will return an object describing the current selection. The object              contains one property, <tt>groups</tt>, containing an array of references              to the data objects representing the selected groups.            </p>"},
open:{help:"<p>              Opens or closes groups for browsing. Three types of              arguments are accepted:            </p><ul><li><tt>String</tt>: the identifier of the group to open or close.</li><li><tt>[ String ]</tt>: array of identifiers of the groups to open or close.</li><li><tt>Object</tt>: object with the following properties:                <ul><li><tt>open</tt>: <tt>true</tt> to open groups (default), <tt>false</tt> close groups,</li><li><tt>groups</tt>: an array of group identifiers to open or close, OR</li><li><tt>all</tt>: set to <tt>true</tt> if the change is to affect all groups.</li></ul></li></ul><p>              FoamTree assumes that the identifier of the group is stored in the <tt>id</tt>              property of the group's data object. Please see the <tt>dataObject</tt> option              for data object examples.            </p><p><strong>Note: </strong> changes affect only the specified groups, the state of              other groups remains unchanged.            </p><p><strong>Note: </strong>when groups are open or closed using this option (as              opposed to user actions), <tt>onGroupOpenOrClose</tt> will not be triggered.            </p><p>              Getting this option will return an object describing the currently open groups. The object              contains one property, <tt>groups</tt>, containing an array of references              to the data objects representing the open groups.            </p>"},
imageData:{help:'<p>              Returns the current visualization image as a <a rel="_blank" href="http://en.wikipedia.org/wiki/Data_URI_scheme"><tt>data:</tt> URL</a> in the PNG format.              An object can be passed as the second argument of the <tt>get</tt> method              to specify the format of the image data. The object can have the following              properties:            </p><ul><li><tt>format</tt>: format of the image data: <tt>image/png</tt> or <tt>image/jpeg</tt></li><li><tt>quality</tt>: if <tt>format</tt> is <tt>image/jpeg</tt>, specifies                the desired quality of JPEG compression in the 0..1 range, where 1.0                means highest quality and largest image data.              </li></ul><p>              The visualization image can be used by the application in many different ways.              On certain browsers, it is possible to              <a rel="_blank" href="http://jsfiddle.net/flyingsheep/wpQtH/">trigger a dialog</a>              allowing the user to save the image to the local disk. The image data can also              be posted to a server that will process if further, e.g. e-mail it to              the requested addresses.            </p><p><strong>Note</strong>: if the attribution logo was fetched from a different domain than              the page that embeds the visualization, getting the visualization              image will not be possible due to <a rel="_blank" href="http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#security-with-canvas-elements">security constraints</a>.            </p>'},
logging:{help:"            Enables logging of debug information to the browser's console.          "},times:{help:"<p>              A read-only option with information about the duration of visualization drawing.              The returned object contains the following properties:            </p><ul><li><tt>finalDrawTime</tt>: time (in milliseconds) of the last complete                redraw of the visualizationR. Updated during initial and API-triggered                <tt>rollout</tt>s and after API-triggered <tt>redraw</tt>s.              </li><li><tt>rolloutFramesDrawn</tt>: number of animation frames drawn during                the last rollout. Updated during initial and API-triggered <tt>rollout</tt>s.              </li><li><tt>rolloutComputationTime</tt>: computation and drawing time (in milliseconds)                of all the frames of the last rollout. Updated during initial and API-triggered                <tt>rollout</tt>s.              </li><li><tt>rolloutTotalTime</tt>: total time (in milliseconds) of the last rollout.                Updated during initial and API-triggered <tt>rollout</tt>s.              </li></ul><p>              The frame rate (FPS, frames per second) of the last rollout can be computed              as <tt>rolloutFramesDrawn * 1000 / rolloutTotalTime</tt>. Due to internal throttling,              the animation frame rate will not be larger than 60 FPS. The maximum (theoretical)              frame rate can be computed as <tt>rolloutFramesDrawn * 1000 / rolloutComputationTime</tt>.            </p>"},
useFastRenderingRoutines:{help:"            If <tt>true</tt>, FoamTree will use incremental rendering routines do draw the            visualization. On certain mobile browsers (such as Safari on Samsung Galaxy S III),            optimized rendering may lead to distorted output. On such devices the default            value of this option defaults to <tt>false</tt>, which also results in lower            animation speeds.          "}};